version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kvdb}
      POSTGRES_USER: ${POSTGRES_USER:-kvuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kvpassword}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/entrypoint.sh
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 30

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l info
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config beat -l info
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db_data:
  redis_data:
